/*
 * MPCHECK - Check double LIBM functions
 * Copyright (C) 2002, 2004, 2005 INRIA
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

+ New and proper way of Interfacing Libraries with MPFR to check them!
+ deactivate directed roundings (some architectures do no support them,
  cf http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=153022), suggested
  by V. Lefe`vre
+ ambiguity between options (-...) and - sign for exponent. For example,
  "mpcheck sqrt -16380" fails.
+ add erf
+ investigate why tests with exponent < -1010 seem to loop to sqrt, cbrt, hypot
	with prec=64 (Athlon/Linux)
+ [from V. Lefe`vre] the ISO C standard says that each of FE_DOWNWARD,
	FE_TONEAREST, FE_TOWARDZERO, FE_UPWARD is defined if and only if the
	implementation supports getting and setting the represented rounding
	direction by means of the fegetround and fesetround functions.
	(for example on arm, only FE_TONEAREST is defined, so the configure
	fails)

